package com.hebit.app.domain.usecase.goal

import com.hebit.app.domain.model.Goal
import com.hebit.app.domain.model.Resource
import com.hebit.app.domain.repository.GoalRepository
import kotlinx.coroutines.flow.Flow
import javax.inject.Inject

// Note: The Goal object passed here might need adjustment
// depending on how ID is handled (generated by backend or client).
// Assuming backend generates ID, so we pass a Goal object without an ID initially.
// For simplicity now, we pass the full Goal object, assuming the repository handles it.
class CreateGoalUseCase @Inject constructor(
    private val repository: GoalRepository
) {
    suspend operator fun invoke(goal: Goal): Flow<Resource<Goal>> {
        // Consider creating a specific Input object if Goal has fields
        // that shouldn't be set on creation (like id, createdAt, updatedAt, progress=0 etc)
        return repository.createGoal(goal)
    }
} 